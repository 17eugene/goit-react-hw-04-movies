{"version":3,"sources":["services/fetchApi.js","components/MoviesList/MoviesList.js","components/MoviesList/MoviesList.module.css","views/SearchPageView/SearchPageView.module.css","views/SearchPageView/SearchPageView.js"],"names":["API_KEY","BASE_URL","fetchData","url","fetch","then","response","ok","json","Promise","reject","Error","getDayTopMovies","searchMovieByKeyWord","searchQuery","getMovieDetails","movieId","getCastMovieInfo","getMovieReview","page","MoviesList","pageTitle","movies","path","location","useLocation","className","styles","title","list","map","movie","item","link","to","pathname","id","state","from","query","search","module","exports","SearchPageView","useState","setQuery","setMovies","history","useHistory","useRouteMatch","URLSearchParams","get","useEffect","fetchAPI","data","results","catch","error","console","log","onSubmit","e","preventDefault","trim","push","alert","form","inputArea","type","placeholder","autoComplete","autoFocus","onChange","currentTarget","value","toLowerCase","searchBtn"],"mappings":"yIAAA,8KAAMA,EAAU,mCACVC,EAAW,+BAEjB,SAASC,EAAUC,GACjB,OAAOC,MAAMD,GAAKE,MAAK,SAACC,GACtB,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,OAAO,IAAIC,MAAM,iBAI7B,SAASC,IACd,OAAOV,EAAU,GAAD,OAAID,EAAJ,uCAA2CD,IAGtD,SAASa,EAAqBC,GACnC,OAAOZ,EAAU,GAAD,OACXD,EADW,iCACsBD,EADtB,iCACsDc,EADtD,gCAKX,SAASC,EAAgBC,GAC9B,OAAOd,EAAU,GAAD,OACXD,EADW,kBACOe,EADP,oBAC0BhB,EAD1B,oBAKX,SAASiB,EAAiBD,GAC/B,OAAOd,EAAU,GAAD,OACXD,EADW,kBACOe,EADP,4BACkChB,EADlC,oBAKX,SAASkB,EAAeF,EAASG,GACtC,OAAOjB,EAAU,GAAD,OACXD,EADW,kBACOe,EADP,4BACkChB,EADlC,6B,gCCpClB,4EAIA,SAASoB,EAAT,GAAkD,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KACjCC,EAAWC,cAEjB,OACE,gCACE,oBAAIC,UAAWC,IAAOC,MAAtB,SAA8BP,IAC9B,oBAAIK,UAAWC,IAAOE,KAAtB,SACGP,EAAOQ,KAAI,SAACC,GAAD,OACV,oBAAmBL,UAAWC,IAAOK,KAArC,SACE,cAAC,IAAD,CACEN,UAAWC,IAAOM,KAClBC,GAAI,CACFC,SAAS,GAAD,OAAKZ,GAAL,OAAYQ,EAAMK,IAC1BC,MAAO,CACLC,KAAMd,EACNe,MAAOf,EAASgB,SANtB,SAUGT,EAAMH,SAXFG,EAAMK,c,mBCXzBK,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,yBAAyB,KAAO,2B,mBCA3HD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,KAAO,6BAA6B,UAAY,oC,yHCyEjGC,UAjEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOL,EAAP,KAAcM,EAAd,KACA,EAA4BD,mBAAS,IAArC,mBAAOtB,EAAP,KAAewB,EAAf,KAEMC,EAAUC,cACVxB,EAAWC,cACTtB,EAAQ8C,cAAR9C,IAEFW,EAAc,IAAIoC,gBAAgB1B,EAASgB,QAAQW,IAAI,SAoC7D,OAlCAC,qBAAU,WACHtC,GAELuC,IACwBvC,GACrBT,MAAK,SAACiD,GAAD,OAAUR,EAAUQ,EAAKC,YAC9BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAAC3C,IA4BF,gCACE,uBAAM8C,SAvBW,SAACC,GACpBA,EAAEC,iBAEmB,KAAjBvB,EAAMwB,QAKVV,IACwBd,GACrBlC,MAAK,SAACiD,GAAD,OAAUR,EAAUQ,EAAKC,YAC9BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAEhCV,EAAQiB,KAAR,2BACKxC,GADL,IAEEgB,OAAO,SAAD,OAAWD,MAGnBM,EAAS,KAdPoB,MAAM,oBAmBwBvC,UAAWC,IAAOuC,KAAhD,UACE,uBACExC,UAAWC,IAAOwC,UAClBC,KAAK,OACLC,YAAY,gBACZC,aAAa,MACbC,WAAS,EACTC,SAlCiB,SAACX,GACxBhB,EAASgB,EAAEY,cAAcC,MAAMC,gBAkCzBD,MAAOnC,IAET,wBAAQb,UAAWC,IAAOiD,UAAWR,KAAK,SAA1C,uBAIF,cAAC,IAAD,CAAY9C,OAAQA,EAAQC,KAAMpB,EAAM","file":"static/js/5.309dcf09.chunk.js","sourcesContent":["const API_KEY = \"da5c3785a5632e6df31c937660854faf\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nfunction fetchData(url) {\r\n  return fetch(url).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(\"Not found\"));\r\n  });\r\n}\r\n\r\nexport function getDayTopMovies() {\r\n  return fetchData(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n}\r\n\r\nexport function searchMovieByKeyWord(searchQuery) {\r\n  return fetchData(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\r\n  );\r\n}\r\n\r\nexport function getMovieDetails(movieId) {\r\n  return fetchData(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function getCastMovieInfo(movieId) {\r\n  return fetchData(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport function getMovieReview(movieId, page) {\r\n  return fetchData(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n}\r\nexport { fetchData };\r\n","import { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport styles from \"./MoviesList.module.css\";\r\n\r\nfunction MoviesList({ pageTitle, movies, path }) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={styles.title}>{pageTitle}</h2>\r\n      <ul className={styles.list}>\r\n        {movies.map((movie) => (\r\n          <li key={movie.id} className={styles.item}>\r\n            <Link\r\n              className={styles.link}\r\n              to={{\r\n                pathname: `${path}${movie.id}`,\r\n                state: {\r\n                  from: location,\r\n                  query: location.search,\r\n                },\r\n              }}\r\n            >\r\n              {movie.title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { MoviesList };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MoviesList_title__2y0yI\",\"list\":\"MoviesList_list__3v_fT\",\"item\":\"MoviesList_item__2hsp8\",\"link\":\"MoviesList_link__1S6ci\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputArea\":\"SearchPageView_inputArea__2M-0r\",\"form\":\"SearchPageView_form__16OlR\",\"searchBtn\":\"SearchPageView_searchBtn__1fsvi\"};","import { useState } from \"react\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router\";\r\n\r\nimport * as fetchAPI from \"../../services/fetchApi\";\r\nimport { MoviesList } from \"../../components/MoviesList/MoviesList\";\r\n\r\nimport styles from \"./SearchPageView.module.css\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\n\r\nfunction SearchPageView() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { url } = useRouteMatch();\r\n\r\n  const searchQuery = new URLSearchParams(location.search).get(\"query\");\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) return;\r\n\r\n    fetchAPI\r\n      .searchMovieByKeyWord(searchQuery)\r\n      .then((data) => setMovies(data.results))\r\n      .catch((error) => console.log(error));\r\n  }, [searchQuery]);\r\n\r\n  const inputValueChange = (e) => {\r\n    setQuery(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (query.trim() === \"\") {\r\n      alert(\"Incorrect query\");\r\n      return;\r\n    }\r\n\r\n    fetchAPI\r\n      .searchMovieByKeyWord(query)\r\n      .then((data) => setMovies(data.results))\r\n      .catch((error) => console.log(error));\r\n\r\n    history.push({\r\n      ...location,\r\n      search: `query=${query}`,\r\n    });\r\n\r\n    setQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onFormSubmit} className={styles.form}>\r\n        <input\r\n          className={styles.inputArea}\r\n          type=\"text\"\r\n          placeholder=\"Search for...\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          onChange={inputValueChange}\r\n          value={query}\r\n        ></input>\r\n        <button className={styles.searchBtn} type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n      <MoviesList movies={movies} path={url + \"/\"} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPageView;\r\n"],"sourceRoot":""}